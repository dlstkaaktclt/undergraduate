levels(y2)
forcats::gss_cat
?gss_cat
ggplot(gss_cat, aes(race)) + geom_bar()
ggplot(gss_cat, aes(race)) + geom_bar() + scale_x_discrete(drop = FALSE)
gss_cat$rincome
levels(gss_cat$rincome)
ggplot(data = gss_cat) + geom_bar(mapping = aes(x = rincome))
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome))
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome)) +
scale_x_discrete(drop = FALSE)
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome))
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = forcats::gss_cat) + geom_bar(mapping = aes(x = rincome)) +
coord_flip()
?gss_cat
levels(gss_cat$rincome)
easy_gss_cat <- forcats::gss_cat  %>%
mutate(rincome = fct_recode(rincome, "$0 to $999" = "Lt $1000")) %>%
mutate(rincome = fct_relevel(rincome, "Not applicable"))
ggplot(data = easy_gss_cat) + geom_bar(mapping = aes(x = rincome)) +
coord_flip()
?gss_cat
ggplot(data = easy_gss_cat) + geom_bar(mapping = aes(x = rincome)) +
coord_flip() + labs(x = "reported income", y = "number of people")
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(age = mean(age, na.rm = TRUE), tvhours = mean(tvhours, na.rm = TRUE), n = n())
ggplot(relig_summary, aes(tvhours, relig)) + geom_point()
fct_reorder(relig_summer$relig,relig_summary$tvhours)
fct_reorder(relig_summary$relig,relig_summary$tvhours)
levels(relgi_summary$relig)
levels(relig_summary$relig)
relig_summary$tvhours
fct_reorder(relig_summary$relig,c(15,14,13,12,11,10,9,8,7,6,5,4,3,2,1))
relig_summary %>%
mutate(relig = fct_reorder(relig, tvhours)) %>%
ggplot(aes(tvhours, relig)) +
geom_point()
rincome_summary <- gss_cat %>%
group_by(rincome) %>%
summarise(age = mean(age, na.rm =TRUE), tvhours = mean(tvhours, na.rm = TRUE), n = n()))
summarise(age = mean(age, na.rm =TRUE), tvhours = mean(tvhours, na.rm = TRUE), n = n())
rincome_summary <- gss_cat %>%
group_by(rincome) %>%
summarise(age = mean(age, na.rm =TRUE), tvhours = mean(tvhours, na.rm = TRUE), n = n())
rincome_summary
rincome_summary %>%
mutate(rincome = fct_reorder(rincome, age))
rincome_summary %>%
+ mutate(rincome = fct_reorder(rincome, age))
ggplot(rincome_summary, aes(age, fct_reorder(rincome, age)))
ggplot(rincome_summary, aes(age, fct_reorder(rincome, age))) + geom_point()
by_age <- gss_cat %>%
filter(!is.na(age)) %>%
count(age, marital) %>%
group_by(age) %>%
mutate(prop = n/sum(n))
by_age
ggplot(by_age, aes(age, prop, colour = marital)) + geom_line(na.rm = TRUE)
ggplot(by_age, aes(age, prop, colour = fct_reorder2(marital, age, prop))) + geom_line() + labs(colour = "marital")
?fct_reorder2
ggplot(by_age, aes(age, prop, colour = marital)) + geom_line(na.rm = TRUE)
ggplot(by_age, aes(age, prop, colour = fct_reorder2(marital, age, prop))) + geom_line() + labs(colour = "marital")
levels(by_age$marital)
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop))
by_age$age
by_age$prop
levels(fct_reorder(by_age$marital, by_age$age))
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop))
levels(by_age$marital)
max(by_age$age)
filter(by_age, age == max(age))
View(by_age)
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop, .fun = (min,)))
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop, .fun = c(min,)))
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop, .fun = c(min,NULL)))
levels(fct_reorder2(by_age$marital, by_age$age, by_age$prop, .fun = c(min,max)))
?fct_reorder2
?last2
last2
last2(1,2)
last2(c(1,2),c(2,3))
last2(c(1,2),c(3,2))
fct_rev(y1)
gss_cat %>%
mutate(marital = marital %>% fct_infreq() %>% fct_rev()) %>%
ggplot(aes(marital)) + geom_bar()
str(gss_cat)
levels(gss_cat$marital)
levels(gss_cat$race)
ggplot(data = forcats::gss_cat) +
geom_bar(mapping = aes(x = race)) +
scale_x_discrete(drop = FALSE)
levels(forcats::gss_cat$rincome)
levels(forcats::gss_cat$partyid)
levels(forcats::gss_cat$relig)
ggplot(data = forcats::gss_cat) +
geom_bar(mapping = aes(x = relig)) +
scale_x_discrete(drop = FALSE)
ggplot(data = forcats::gss_cat) +
geom_bar(mapping = aes(x = relig)) +
scale_x_discrete(drop = FALSE) +
coord_flip()
levels(forcats::gss_cat$denom)
?gss_cat
ggplot(data = forcats::gss_cat) +
geom_bar(mapping = aes(x = denom)) +
scale_x_discrete(drop = FALSE) +
coord_flip()
gss_cat %>%
mutate(partyid = fct_recode(partyid,
"Republican, strong"    = "Strong republican",
"Republican, weak"      = "Not str republican",
"Independent, near rep" = "Ind,near rep",
"Independent, near dem" = "Ind,near dem",
"Democrat, weak"        = "Not str democrat",
"Democrat, strong"      = "Strong democrat")) %>%
count(partyid)
levels(gss_cat$partyid)
gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
count(partyid)
gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
count(partyid)
fct_lump(gss_cat$relig)
?fct_lump
gss_cat %>%
mutate(relig = fct_lump(relig, n = 10)) %>%
count(relig, sort = TRUE) %>%
print(n = Inf)
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(prop_rep = sum(count(rep))/n(), prop_ind = sum(count(ind))/n(),
prop_dem = sum(count(dem))/n(),
prop_other = sum(count(other))/n())
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(prop_rep = sum(count(partyid == "rep"))/n(), prop_ind = sum(count(partyid == "ind"))/n(),
prop_dem = sum(count(partyid == "dem"))/n(),
prop_other = sum(count(partyid == "other"))/n())
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
))
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)
combined_gss_cat
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(count_other = n(partyid == "other"))
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(count_other = sum(ifelse(partyid == "other",1, 0)))
combined_gss_cat
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(prop_other = sum(ifelse(partyid == "other",1, 0))/n())
combined_gss_cat
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(
prop_rep = sum(ifelse(partyid == "rep",1, 0))/n()
prop_ind = sum(ifelse(partyid == "ind",1, 0))/n()
prop_dem = sum(ifelse(partyid == "dem",1, 0))/n()
prop_other = sum(ifelse(partyid == "other",1, 0))/n())
combined_gss_cat <- gss_cat %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(
prop_rep = sum(ifelse(partyid == "rep",1, 0))/n(),
prop_ind = sum(ifelse(partyid == "ind",1, 0))/n(),
prop_dem = sum(ifelse(partyid == "dem",1, 0))/n(),
prop_other = sum(ifelse(partyid == "other",1, 0))/n())
gss_cat %>% filter(is.na(partyid))
combined_gss_cat <- gss_cat %>%
filter(!is.na(partyid)) %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
summarise(
prop_rep = sum(ifelse(partyid == "rep",1, 0))/n(),
prop_ind = sum(ifelse(partyid == "ind",1, 0))/n(),
prop_dem = sum(ifelse(partyid == "dem",1, 0))/n(),
prop_other = sum(ifelse(partyid == "other",1, 0))/n())
combined_gss_cat
combined_gss_cat <- gss_cat %>%
filter(!is.na(partyid)) %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
count(year, partyid) %>%
group_by(year)
combined_gss_cat
combined_gss_cat <- gss_cat %>%
filter(!is.na(partyid)) %>%
mutate(partyid = fct_collapse(partyid,
"other" = c("No answer", "Don't know", "Other party"),
"rep" = c("Strong republican", "Not str republican"),
"ind" = c("Ind,near rep", "Independent", "Ind,near dem"),
"dem" = c("Not str democrat", "Strong democrat")
)) %>%
count(year, partyid) %>%
group_by(year) %>%
mutate(prop = n / sum(n))
combined_gss_cat
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid))
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line()
combined_gss_cat <- gss_cat %>%
filter(!is.na(partyid)) %>%
mutate(partyid = fct_collapse(partyid,
"Other" = c("No answer", "Don't know", "Other party"),
"Republican" = c("Strong republican", "Not str republican"),
"Independent" = c("Ind,near rep", "Independent", "Ind,near dem"),
"Democrat" = c("Not str democrat", "Strong democrat")
)) %>%
count(year, partyid) %>%
group_by(year) %>%
mutate(prop = n / sum(n))
combined_gss_cat
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line()
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + coord_x_discrete(breaks = seq(2000, 2014, 2))
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_discrete(breaks = seq(2000, 2014, 2))
seq(2000, 2014, 2)
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_discrete(label = "year", breaks = seq(2000, 2014, 2))
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_discrete(labels = seq(2000, 2014, 2))
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line()
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_continuous(breaks = seq(2000, 2014, 2))
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_continuous(breaks = seq(2000, 2014, 2))
+ labs(y = "proportion")
ggplot(data = combined_gss_cat, mapping = aes(x = year, y = prop, color = partyid)) + geom_point() + geom_line() + scale_x_continuous(breaks = seq(2000, 2014, 2)) + labs(y = "proportion")
ymd("2017-01-31")
library(lubridate)
ymd("2017-01-31")
mdy("January 31st, 2017")
dmy("31-Jan-2017")
flights %>% select(year, month, day, hour, minute)
flights
library(nycflights13)
flights %>% select(year, month, day, hour, minute)
flights %>% select(year, month, day, hour, minute) %>% mutate( departure = make_datetime(year, month, day, hour, minute))
str(flights %>% select(year, month, day, hour, minute) %>% mutate( departure = make_datetime(year, month, day, hour, minute)))
make_datetime_100 <- function(year, month, day, time) { make_datetime(year, month, day, time %/% 100, time %% 100)}
flights_dt <- flights %>% filter(!is.na(dep_time), !is.na(arr_time)) %>%  mutate(dep_time = make_datetime_100(year,month,day,dep_time), arr_time = make_datetime_100(year, month, day, arr_time), sched_dep_time = make_datetime_100(year, month, day, sched_dep_time), sched_arr_time = make_datetime_100(year, month, day, sched_arr_time)) %>%
select(origin, dest, ends_with("delay"), ends_with("time"))
flights_dt
fligths_dt %>%
ggplot(aes(dep_time)) +
geom_freqpoly(binwidth = 86400)
flights_dt %>%
ggplot(aes(dep_time)) +
geom_freqpoly(binwidth = 86400)
flights_dt %>%
filter(dep_time < ymd(20130102)) %>%
ggplot(aes(dep_time)) +
geom_freqploy(binwidth = 600)
flights_dt %>%
filter(dep_time < ymd(20130102)) %>%
ggplot(aes(dep_time)) +
geom_freqpoly(binwidth = 600)
as_datet9me(today())
as_datetime(today())
as_date(now())
?today()
today(tzone = "asia/seoul")
today(tzone = "AST")
?tzone
?timezone
today(tzone = "PST")
today(tzone = "UTC")
tz
?tz
today(tzone = "Pacific/Vancouver")
today(tzone = "PST")
year(today())
month(today())
mday(today())
yday(today())
wday(today())
hour(now())
minute(now())
second(now())
wday(today(), label = TRUE)
month(now(), label = TRUE)
month(today(), label = TRUE)
month(today(), label = TRUE, tz = "UTC")
month(today(), label = TRUE)
wday(datetime, label = TRUE, abbr = FALSE)
datetime <- ymd_hms("2016-07-08 12:34:56")
wday(datetime, label = TRUE, abbr = FALSE)
flights_dt %>%
mutate(minute = minute(dep_time)) %>%
group_by(minute) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE), n = n()) %>%
ggplot(aes(minute, avg_delay)) %>% geom_line()
flights_dt %>%
mutate(minute = minute(dep_time)) %>%
group_by(minute) %>%
summarise(
avg_delay = mean(arr_delay, na.rm = TRUE),
n = n()) %>%
ggplot(aes(minute, avg_delay)) +
geom_line()
flights_dt %>%
count(week = floor_date(dep_time, "week")) %>%
ggplot(aes(week, n)) + geom_line()
?floor_date
floor_date(today(),"year")
floor_date(today(),"month")
floor_date(today(),"day")
round_date(today(),"day")
round_date(today(),"year")
round_date(today(),"month")
ceiling_date(today(),"month")
ceiling_date(today(),"day")
ceiling_date(today(),"day(datetime <- ymd_hms("2016-07-08 12:34:56"))")
(datetime <- ymd_hms("2016-07-08 12:34:56"))
year(datetime) <- 2020
datetime
hour(datetime) <- hour(datetime) + 1
datetime
flights_dt %>%
mutate(dep_hour = update(dep_time, yday = 1)) %>%
ggplot(aes(dep_hour)) + geom_freqpoly(binwidth = 300)
diamonds$carat
flights$sched_dep_time
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_bar()
ggplot(data = flights, mapping = aes(x = sched_dep_time)) + geom_bar()
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_bar(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.05)
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.01)
ggplot(data = flights, mapping = aes(x = sched_dep_time)) + geom_histogram()
ggplot(data = flights, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 5)
flights_dt <- flights %>%
filter(!is.na(dep_time), !is.na(arr_time)) %>%
mutate(
dep_time = make_datetime_100(year, month, day, dep_time),
arr_time = make_datetime_100(year, month, day, arr_time),
sched_dep_time = make_datetime_100(year, month, day, sched_dep_time),
sched_arr_time = make_datetime_100(year, month, day, sched_arr_time)
) %>%
select(origin, dest, ends_with("delay"), ends_with("time"))
ggplot(data = flights_dt, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 5)
ggplot(data = flights_dt, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 600)
ggplot(data = flights_dt, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 60000)
ggplot(data = flights_dt, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 86400)
ggplot(data = flights_dt, mapping = aes(x = sched_dep_time)) + geom_histogram(binwidth = 3600)
ggplot(data = flights_dt, mapping = aes(x = minute(sched_dep_time))) + geom_histogram(binwidth = 3600)
ggplot(data = flights_dt, mapping = aes(x = minute(sched_dep_time))) + geom_histogram(binwidth = 1)
ggplot(data = diamonds, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.01)
ggplot(data = flights_dt, mapping = aes(x = minute(sched_dep_time))) + geom_histogram(binwidth = 1)
ggplot(data = flights_dt, mapping = aes(x = update(sched_dep_time, yday = 1))) + geom_histogram(binwidth = 60)
ggplot(diamonds, aes(x = carat %% 1 * 100)) +
geom_histogram(binwidth = 1)
ggplot(flights_dt, aes(x = minute(sched_dep_time))) +
geom_histogram(binwidth = 1)
ggplot(data = diamonds, mapping = aes(x = carat %% 1 * 100)) +
geom_histogram(binwidth = 1)
ggplot(data = flights_dt, mapping = aes(x = minute(sched_dep_time))) + geom_histogram(binwidth = 1)
ggplot(data = diamonds, mapping = aes(x = carat %% 1 * 100)) +
geom_histogram(binwidth = 1)
ggplot(data = flights_dt, mapping = aes(x = minute(sched_dep_time))) + geom_histogram(binwidth = 1)
dmonths(1)
next_year <- today() + years(1)
today() %--% next_year
today() %--% next_year / ddays(1
)
yms("1995-06-08")
ymd("1995-06-08")
ymd("1995-06-08")
my_birthday <- ymd("1995-06-08")
foreign_age <- function(birthdate){
now_date <- today()
(birthdate %--% now_date) %/% years(1)
}
foreign_age(my_birthday)
foreign_age <- function(birthdate){
now_date <- today()
(birthdate %--% now_date) / years(1)
}
foreign_age(my_birthday)
korean_age(my_birthday)
korean_age <- function(birthdate){
now_date <- today()
(year(now_date) - year(birthdate)) + 1
}
korean_age(my_birthday)
foreign_age <- function(birthdate){
now_date <- today()
(birthdate %--% now_date) %/% years(1)
}
foreign_age <- function(birthdate){
now_date <- today()
year((birthdate %--% now_date))
}
year((my_birthday %--% today()))
year((my_birthday %--% today())
year((my_birthday %--% today()))
tinter <- my_birthday %--% today()
year(tinter)
tinter
foreign_age <- function(birthdate){
now_date <- today()
(year(now_date) - year(birthdate)) + ifelse(month(now_date) <= month(birthdate) & day(now_date) < day(birthdate), 0, 1)
}
foreign_age(my_birthday)
foreign_age <- function(birthdate){
now_date <- today()
year_diff <- year(now_date) - year(birthdate)
month_diff <- month(now_date) - month(birthdate)
day_diff <- day(now_date) - day(birthdate)
ifelse(monthdiff > 0 | (month_diff == 0 & day_diff >= 0), year_diff, year_diff-1)
}
foreign_age(my_birthday)
foreign_age <- function(birthdate){
now_date <- today()
year_diff <- year(now_date) - year(birthdate)
month_diff <- month(now_date) - month(birthdate)
day_diff <- day(now_date) - day(birthdate)
ifelse(month_diff > 0 | (month_diff == 0 & day_diff >= 0), year_diff, year_diff-1)
}
foreign_age(my_birthday)
foreign_age <- function(birthdate){
now_date <- today()
year_diff <- year(now_date) - year(birthdate)
month_diff <- month(now_date) - month(birthdate)
day_diff <- day(now_date) - day(birthdate)
ifelse(month_diff > 0 | (month_diff == 0 & day_diff >= 0), year_diff, year_diff-1)
}
my_birthday = ymd("2018-11-08")
a = ymd("2018-11-08")
b = ymd("2018-11-09")
= ymd("2018-11-10")
c = ymd("2018-11-10")
foreign_age(a)
foreign_age(b)
foreign_age(c)
korean_age(a)
korean_age(b)
korean_age(c)
