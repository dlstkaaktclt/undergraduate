View(mydata)
mydata <- read_csv("etc/mydata.csv", skip = 1, col_names = TRUE, locale = locale("ko", encoding = 'euc-kr'), n_max = 26)
myheader <-  read_csv("etc/mydata.csv", skip = 1)
View(mydata)
View(mydata)
View(myheader)
myheader = read_csv("etc/mydata.csv", skip = 1, locale = locale("ko", encoding = 'euc-kr'), n_max = 1)
View(myheader)
myheader = read_csv("etc/mydata.csv", skip = 1, locale = locale("ko", encoding = 'euc-kr'), n_max = 0)
mydata <- read_csv("etc/mydata.csv", skip = 3, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr'), n_max = 25)
View(mydata)
colnames(mydata) = myheader
mydata
View(myheader)
View(mydata)
myheader = read_csv("etc/mydata.csv", skip = 1, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr'), n_max = 1)
View(myheader)
mydata <- read_csv("etc/mydata.csv", skip = 3, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr'), n_max = 25)
View(mydata)
colnames(mydata) = myheader
myheader = read_csv("etc/mydata.csv", skip = 1, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr'), n_max = 1)
mydata <- read_csv("etc/mydata.csv", skip = 3, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr'), n_max = 25)
colnames(mydata) = myheader
seoul2018 <- mydata
View(seoul2018)
seoul2019
seoul2018
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4a
table4b
table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
table2
table2 %>% spread(key = type, value = count)
table3
table3 -> separate(rate, into = c("cases", "population"))
table3 -> separate(rate, into = c("cases", "population"))
table3 %>% separate(rate, into = c("cases", "population"))
table5 %>%  unite(new, century, year)
table5 %>%  unite(new, century, year, sep = "")
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9)
seoul2018tidy
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9) %>%
mutate(`외국인_남자(명)` = `총인구_남자(명)` - `내국인_남자(명)`, `외국인_여자(명)` = `총인구_여자(명)` - `내국인_여자(명)`)
View(seoul2018tidy)
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9) %>%
mutate(`외국인_남자(명)` = `총인구_남자(명)` - `내국인_남자(명)`, `외국인_여자(명)` = `총인구_여자(명)` - `내국인_여자(명)`) %>%
select(-2,-3)
View(seoul2018tidy)
View(seoul2018tidy)
seoul2018tidy
seoul2018tidy$2
seoul2018tidy$`내국인_남자(명)`
type(seoul2018tidy)
types(seoul2018tidy)
?type
typeof(seoul2018tidy(
))
typeof(seoul2018tidy)
typeof(seoul2018tidy$`내국인_남자(명)`)
typeof(seoul2018tidy$내국인_남자(명))
typeof(seoul2018tidy$`내국인_남자(명)`)
myheader = read_csv("etc/mydata.csv", skip = 1, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr', grouping_mark = ','), n_max = 1)
mydata <- read_csv("etc/mydata.csv", skip = 3, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr', grouping_mark = ','), n_max = 25)
colnames(mydata) = myheader
seoul2018 <- mydata
View(seoul2018)
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9) %>%
mutate(`외국인_남자(명)` = `총인구_남자(명)` - `내국인_남자(명)`, `외국인_여자(명)` = `총인구_여자(명)` - `내국인_여자(명)`) %>%
select(-2,-3)
View(seoul2018tidy)
typeof(parse_number("$100"))
tibble("a","b","c",
)
tibble("a","b","c"
1,2,3
tibble()
tibble("a","b",c",1,2,3)
)
"
tibble("a","b","c",1,2,3)
tibble("a","b","c"1,2,3)
tibble("a","b","c",1,2,3)
read_csv("a","b","c",
"12,345","67,890","34,123",
"123,534","1,123,634","317,856,258")
tibble("a","b","c",
+ "12,345","67,890","34,123",
+ "123,534","1,123,634","317,856,258")
tibble("a","b","c",
"12,345","67,890","34,123",
"123,534","1,123,634","317,856,258")
tibble(~a,~b,~c,
"12,345","67,890","34,123",
"123,534","1,123,634","317,856,258")
tibble(~a,~b,~c,
"12,345","67,890","34,123",
"123,534","1,123,634","317,856,258")
tibble(a = c("12,345","123,534"), b = c("67,890","1,123,634"),
c = c("34,123","317,856,258"))
test <- tibble(a = c("12,345","123,534"), b = c("67,890","1,123,634"),
c = c("34,123","317,856,258"))
View(test)
typeof(test$b)
typeof(test$c)
mutate(a = parse_number())
new_test <- test %>% mutate(a = parse_number(a), b = parse_number(b), c = parse_number(c))
View(new_test)
typeof(new_test)
typeof(new_test$a)
typeof(new_test$b)
typeof(new_test$c)
typeof(1)
str(a)
str(test)
str(new_test)
test <- tibble(a = c("12,345","123,534"), b = c("67,890","1,123,634"),
c = c("34,123","317,856,258"))
str(test)
new_test <- test %>% mutate(a = parse_number(a), b = parse_number(b), c = parse_number(c))
str(new_test)
str(seoul2018tidy)
str(seoul2018)
parse_number(123)
str(seoul2018)
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9) %>%
mutate(`외국인_남자(명)` = `총인구_남자(명)` - `내국인_남자(명)`, `외국인_여자(명)` = `총인구_여자(명)` - `내국인_여자(명)`) %>%
select(-2,-3)
View(seoul2018tidy)
total_pop <- seoul2018tidy %>%
transmute(`총인구(명)' = '외국인_남자(명)' + '외국인_여자(명)' + '내국인_남자(명)' + '내국인_여자(명)')
)
;
;
total_pop <- seoul2018tidy %>%
transmute(`총인구(명)` = `외국인_남자(명)` + `외국인_여자(명)` + `내국인_남자(명)` + `내국인_여자(명)`)
View(total_pop)
pops <- total_pop
typeof(pops)
str(pops)
?pull
mtcars %>% pull(-1)
mtcars %>% pull(1)
mtcars %>% pull(cyl)
pull(total_pop)
pops <- pull(total_pop)
str(pops)
typeof(pops)
typeof(total_pop)
str(total_pop)
mean(pops)
sd(pops)
length(pops)
rnorm(length(pops),mean(pops),sd(pops))
my_norm <- rnorm(length(pops),mean(pops),sd(pops))
ggplot(my_norm(
))
ggplot(my_norm)
hist(my_nrom)
hist(my_norm)
hist(pops)
hist(my_norm)
hist(pops)
hist(my_norm)
hist(pops)
hist(my_norm)
hist(pops, breaks = 25)
hist(pops, breaks = 5)
hist(pops, breaks = 10)
hist(my_norm, breaks = 10)
hist(pops, breaks = 10)
my_norm <- rnorm(length(pops),mean(pops),sd(pops))
hist(my_norm, breaks = 10)
hist(pops, breaks = 10)
hist(my_norm, breaks = 10)
hist(pops, breaks = seq(min(pop),max(pop),length.out = 5)
)
hist(pops, breaks = seq(min(pops),max(pops),length.out = 5))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(mmy_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(my_norm, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = 10)
hist(my_norm, breaks = 10)
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = 10)
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 15))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 20))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 25))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 100))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
hist(pops, breaks = seq(min(pops),max(pops),length.out = 10))
?sample
sample(pops)
sample(pops, n=1, size = 10)
sample(pops, size = 10)
sample(pops, size = 10, replace = TRUE)
my_sample <- sample(pops, size = 10, replace = TRUE)
mean(my_sample)
mean(pops)
mean(my_sample)
mean(my_sample)
my_sample2 <- sample(pops, size = 10, replace = TRUE)
mean(my_sample2)
(1/25)^10 * 25!
(1/25)^10 * fact(25)
?factorial
(1/25)^10 * factorial(25)
(1/25)**10 * factorial(25)
((1/25)^10) * factorial(25)
(1/25)^10
((1/25)^10) * factorial(10)
?replicate
replicate(10, sample(pops,size = 10, replace = TRUE))
replicate(10, mean(sample(pops,size = 10, replace = TRUE)))
mean(ten_times)
ten_times <- replicate(10, mean(sample(pops,size = 10, replace = TRUE)))
mean(ten_times)
hun_times <- replicate(100, mean(sample(pops,size = 10, replace = TRUE)))
thou_times <- replicate(1000, mean(sample(pops,size = 10, replace = TRUE)))
tthou_times <- replicate(10000, mean(sample(pops,size = 10, replace = TRUE)))
hun_mean <- mean(hun_times)
thou_mean <- mean(thou_times)
tthou_mean <- mean(tthou_times)
mean(pops)
ten_mean
hun_mean
thou_mean
tthou_mean
ten_times <- replicate(10, mean(sample(pops,size = 10, replace = TRUE)))
ten_mean <- mean(ten_times)
mean(pops)
ten_mean
hun_mean
thou_mean
tthou_mean
mean(pops)
ten_mean_25
ten_times_25 <- replicate(10, mean(sample(pops,size = 25, replace = TRUE)))
hun_times_25 <- replicate(100, mean(sample(pops,size = 25, replace = TRUE)))
thou_times_25 <- replicate(1000, mean(sample(pops,size = 25, replace = TRUE)))
tthou_times_25 <- replicate(10000, mean(sample(pops,size = 25, replace = TRUE)))
ten_mean_25 <- mean(ten_times_25)
hun_mean_25 <- mean(hun_times_25)
thou_mean_25 <- mean(thou_times_25)
tthou_mean_25 <- mean(tthou_times_25)
ten_times_100 <- replicate(10, mean(sample(pops,size = 100, replace = TRUE)))
hun_times_100 <- replicate(100, mean(sample(pops,size = 100, replace = TRUE)))
thou_times_100 <- replicate(1000, mean(sample(pops,size = 100, replace = TRUE)))
tthou_times_100 <- replicate(10000, mean(sample(pops,size = 100, replace = TRUE)))
ten_mean_100 <- mean(ten_times_100)
hun_mean_100 <- mean(hun_times_100)
thou_mean_100 <- mean(thou_times_100)
tthou_mean_100 <- mean(tthou_times_100)
mean(pops)
ten_mean_25
hun_mean_25
thou_mean_25
tthou_mean_25
ten_mean_100
hun_mean_100
thou_mean_100
tthou_mean_100
hist(tthou_mean)
hist(tthou_mean_25)
hist(tthou_mean_100)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(pops)
hist(pops, breaks = 25)
thou_norm <- rnorm(10000,mean(pops),sd(pops)/sqrt(10000))
hist(thou_norm)
tthou_norm <- rnorm(10000,mean(pops),sd(pops)/sqrt(10000))
hist(tthou_norm)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times_25)
hist(tthou_times_100)
hist(tthou_times_25)
hist(tthou_times_100)
library(tidyverse)
myheader = read_csv("etc/mydata.csv", skip = 1, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr', grouping_mark = ','), n_max = 1)
mydata <- read_csv("etc/mydata.csv", skip = 3, col_names = FALSE, locale = locale("ko", encoding = 'euc-kr', grouping_mark = ','), n_max = 25)
colnames(mydata) = myheader
seoul2018 <- mydata
seoul2018tidy <- seoul2018 %>%
select(1,4,5,8,9) %>%
mutate(`외국인_남자(명)` = `총인구_남자(명)` - `내국인_남자(명)`, `외국인_여자(명)` = `총인구_여자(명)` - `내국인_여자(명)`) %>%
select(-2,-3)
View(seoul2018)
total_pop <- seoul2018tidy %>%
transmute(`총인구(명)` = `외국인_남자(명)` + `외국인_여자(명)` + `내국인_남자(명)` + `내국인_여자(명)`)
pops <- pull(total_pop)
my_norm <- rnorm(length(pops),mean(pops),sd(pops))
hist(pops, breaks = 10)
hist(my_norm, breaks = 10)
hist(my_norm, breaks = 10)
hist(pops, breaks = 10)
mean(pops)
hun_times <- replicate(100, mean(sample(pops,size = 10, replace = TRUE)))
thou_times <- replicate(1000, mean(sample(pops,size = 10, replace = TRUE)))
tthou_times <- replicate(10000, mean(sample(pops,size = 10, replace = TRUE)))
hun_mean <- mean(hun_times)
thou_mean <- mean(thou_times)
tthou_mean <- mean(tthou_times)
ten_times_25 <- replicate(10, mean(sample(pops,size = 25, replace = TRUE)))
hun_times_25 <- replicate(100, mean(sample(pops,size = 25, replace = TRUE)))
thou_times_25 <- replicate(1000, mean(sample(pops,size = 25, replace = TRUE)))
tthou_times_25 <- replicate(10000, mean(sample(pops,size = 25, replace = TRUE)))
ten_mean_25 <- mean(ten_times_25)
hun_mean_25 <- mean(hun_times_25)
thou_mean_25 <- mean(thou_times_25)
tthou_mean_25 <- mean(tthou_times_25)
ten_times_100 <- replicate(10, mean(sample(pops,size = 100, replace = TRUE)))
hun_times_100 <- replicate(100, mean(sample(pops,size = 100, replace = TRUE)))
thou_times_100 <- replicate(1000, mean(sample(pops,size = 100, replace = TRUE)))
tthou_times_100 <- replicate(10000, mean(sample(pops,size = 100, replace = TRUE)))
ten_mean_100 <- mean(ten_times_100)
hun_mean_100 <- mean(hun_times_100)
thou_mean_100 <- mean(thou_times_100)
tthou_mean_100 <- mean(tthou_times_100)
?qunatile
?quantile
quantile(pops)
quantile(pops, probs = seq(0, 1, 0.025)
)
quantile(tthou_times, probs = seq(0, 1, 0.025))
quantile(tthou_times_25, probs = seq(0, 1, 0.025))
quantile(tthou_times_100, probs = seq(0, 1, 0.025))
quantile(tthou_times, probs = c(0.025, 0.975))
library(quantmod)
options("getSymbols.warning4.0"=FALSE) # to suppress warnings
samsung <- getSymbols("005930.KS", auto.assign=FALSE)  # KOSPI tick number is 005930
head(samsung)
plot(samsung$`005930.KS.Close`)
samsung_frame <- data.frame(date = index(samsung), coredata(samsung))
samsung_tibble <- as_tibble(samsung_frame)
samsung_tibble
ggplot(data = samsung_tibble) + geom_line(mapping = aes(x = date, y = X005930.KS.Close)) +
labs(y = "closed_price(Won)")
ggplot(data = samsung_tibble) + geom_line(mapping = aes(x = date, y = X005930.KS.Close)) +
labs(y = "closed_price(Won)") +
scale_x_date(breaks = "1 year")
ggplot(data = samsung_tibble) + geom_line(mapping = aes(x = date, y = X005930.KS.Close)) +
labs(y = "closed_price(Won)") +
scale_x_date(breaks = "1 year", date_labels = "%Y")
samsung_tibble
knitr::kable(usd_krw)
quantmod::getFX(Currencies = 'USD/KRW')
quantmod::getFX(Currencies = 'JPY/KRW')
usd_krw <- as_tibble(data.frame(date = index(USDKRW), coredata(USDKRW)))
jpy_krw <- as_tibble(data.frame(date = index(JPYKRW), coredata(JPYKRW)))
knitr::kable(usd_krw)
knitr::kable(jpy_krw)
new_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
inner_join(usd_krw) %>%
inner_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY)
View(new_samsung)
ggplot(data = new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
View(new_samsung)
new_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
inner_join(usd_krw) %>%
inner_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY, USD.KRW, JPY.KRW)
View(new_samsung)
ggplot(data = new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
new_samsung$USD.KRW
new_samsung$USD.KRW[1]
new_samsung$USD.KRW[0]
new_samsung$USD.KRW[2]
new_samsung$USD.KRW[`]
a
;
adjusted_samsung <- new_samsung %>%
transmute(date = date, KRW = KRW, NORM_USD = USD * USD.KRW[1], NORM_JPY = JPY * JPY.KRW[1])
View(adjusted_samsung)
normed_samsung <- new_samsung %>%
transmute(date = date, KRW = KRW, USD = USD, JPY = JPY, NORM_USD = USD * USD.KRW[1], NORM_JPY = JPY * JPY.KRW[1])
ggplot(data = normed_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = NORM_USD, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = NORM_JPY, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
x_samsung <- new_samsung %>%
mutate(norm_won = KRW, norm_usd = min(KRW) + (USD-min(USD))*(max(KRW) - min(KRW))/(max(USD) - min(USD)), norm_jpy = min(KRW) + (JPY - min(JPY)) * (max(KRW) - min(KRW)) / (max(JPY) - min(JPY)))
x_samsung
View(x_samsung)
ggplot(data = x_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = norm_usd, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = norm_jpy, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
new_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
left_join(usd_krw) %>%
left_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY, USD.KRW, JPY.KRW)
ggplot(data = new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
exchange_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
left_join(usd_krw) %>%
left_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY, USD.KRW, JPY.KRW)
knitr::kable(exchange_samsung)
ggplot(data = exchange_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung stock") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
USDKRW[1]
typeof(USDKRW[1])
normed_samsung <- exchange_samsung %>%
transmute(date = date, KRW = KRW, USD = USD, JPY = JPY, NORM_USD = USD * USD.KRW[min(which(!is.na(USD.KRW)))], NORM_JPY = JPY * JPY.KRW[min(which(!is.na(JPY.KRW)))])
normed_exchange_samsung <- exchange_samsung %>%
transmute(date = date, KRW = KRW, USD = USD, JPY = JPY, NORM_USD = USD * USD.KRW[min(which(!is.na(USD.KRW)))], NORM_JPY = JPY * JPY.KRW[min(which(!is.na(JPY.KRW)))])
ggplot(data = normed_exchange_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = NORM_USD, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = NORM_JPY, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = NULL, title = "price of samsung stock normalized by won") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
library(tidyverse)
library(quantmod)
options("getSymbols.warning4.0"=FALSE) # to suppress warnings
samsung <- getSymbols("005930.KS", auto.assign=FALSE)  # KOSPI tick number is 005930
head(samsung)
plot(samsung$`005930.KS.Close`)
samsung_frame <- data.frame(date = index(samsung), coredata(samsung))
samsung_tibble <- as_tibble(samsung_frame)
samsung_tibble
ggplot(data = samsung_tibble) + geom_line(mapping = aes(x = date, y = X005930.KS.Close)) +
labs(y = "closed_price(Won)") +
scale_x_date(breaks = "1 year", date_labels = "%Y")
quantmod::getFX(Currencies = 'USD/KRW')
quantmod::getFX(Currencies = 'JPY/KRW')
usd_krw <- as_tibble(data.frame(date = index(USDKRW), coredata(USDKRW)))
jpy_krw <- as_tibble(data.frame(date = index(JPYKRW), coredata(JPYKRW)))
knitr::kable(usd_krw)
knitr::kable(jpy_krw)
exchange_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
left_join(usd_krw) %>%
left_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY, USD.KRW, JPY.KRW)
knitr::kable(exchange_samsung)
ggplot(data = exchange_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = "KRW", title = "price of samsung stock") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
normed_exchange_samsung <- exchange_samsung %>%
transmute(date = date, KRW = KRW, USD = USD, JPY = JPY, NORM_USD = USD * USD.KRW[min(which(!is.na(USD.KRW)))], NORM_JPY = JPY * JPY.KRW[min(which(!is.na(JPY.KRW)))])
ggplot(data = normed_exchange_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = NORM_USD, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = NORM_JPY, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = "KRW(normalized)", title = "price of samsung stock normalized by won") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
new_samsung <- samsung_tibble %>%
filter(!is.na(`X005930.KS.Close`)) %>%
inner_join(usd_krw) %>%
inner_join(jpy_krw) %>%
rename(KRW = `X005930.KS.Close`) %>%
mutate(USD = `KRW` / `USD.KRW`, JPY = `KRW` / `JPY.KRW`) %>%
select(date, KRW, USD, JPY, USD.KRW, JPY.KRW)
knitr::kable(new_samsung)
ggplot(data = new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = USD, color = "USD")) + geom_line(mapping = aes(x = date, y = JPY, color = "JPY")) + scale_color_manual( breaks = c("KRW", "JPY", "USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = "KRW", title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
ggplot(data = normed_new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = NORM_USD, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = NORM_JPY, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = "KRW(normalized)", title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
normed_new_samsung <- new_samsung %>%
transmute(date = date, KRW = KRW, USD = USD, JPY = JPY, NORM_USD = USD * USD.KRW[min(which(!is.na(USD.KRW)))], NORM_JPY = JPY * JPY.KRW[min(which(!is.na(JPY.KRW)))])
ggplot(data = normed_new_samsung) + geom_line(mapping = aes(x = date, y = KRW, color = "KRW")) + geom_line(mapping = aes(x = date, y = NORM_USD, color = "NORM_USD")) + geom_line(mapping = aes(x = date, y = NORM_JPY, color = "NORM_JPY")) + scale_color_manual( breaks = c("KRW", "NORM_JPY", "NORM_USD"), values = c("green", "red", "blue")) + theme(legend.position="bottom", legend.direction="horizontal") +
labs(x = "Date", y = "KRW(normalized)", title = "price of samsung when closed in recent 180 days") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")
